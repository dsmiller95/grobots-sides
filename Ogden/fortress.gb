#side The Fortress
#author Ogden
#color 767
#seed 3 4 1 2 6 5 1 1 1 

TODO:
Archers wasting lots of shots on harmless targets feeding just outside. Fix maybe?
Add farmers (close-range eaters) and silo (large constructor).
Mitigate against missiles.
Catapults (prepped, reactionary missiles) would be cool.

#code

#const WORKER-TYPE 1
#const ARCHER-TYPE 2
#const LORD-TYPE 3
#const BARRACKS-TYPE 4
#const FARMER-TYPE 5
#const GRANARY-TYPE 6

#const CENTER-POSITION-CHANNEL 1
#const BARRACKS-POSITION-CHANNEL 2
#const BARRACKS-HELP-CHANNEL 3
#const GRANARY-POSITION-CHANNEL 4

cluster-center: ; -- x y
	0 0 0
	do
		robot-position v+
		rot 1 + rrot
	next-robot while-loop
	rot vs/
return

wait-for-message: ; channel -- message
	do
		dup receive if
			0
		else
			1
		then
	while-loop
	rot drop
return

abort-if-dup-singleton: ; type --
	dup constructor-type = if
		type-population 0 > if
			0 constructor-type!
		then
	else
		drop
	then
return

#type Worker Peasant
#hardware
processor 8
solar-cells .4
constructor .4
energy 15 1
syphon 0.2 15
armor 25

#code
#vector barracks
#var help 0

BARRACKS-POSITION-CHANNEL wait-for-message barracks!

do
	; update
	BARRACKS-POSITION-CHANNEL receive if barracks! then
	BARRACKS-HELP-CHANNEL receive if help! then
	; supply
	help if
		barracks position v- rect-to-polar syphon-direction! syphon-distance!
		syphon-max-rate negate syphon-rate!
	else
		0 syphon-rate!
	then
	; reproduce
	energy 5 >= if
		; if we're making a singleton, make sure someone else hasn't already
		LORD-TYPE abort-if-dup-singleton
		BARRACKS-TYPE abort-if-dup-singleton
		; new type if done
		constructor-progress nif
			0.7 WORKER-TYPE balance-type
			0.2 ARCHER-TYPE balance-type
			0.02 FARMER-TYPE balance-type
			; just one of each of these
			epsilon LORD-TYPE balance-type
			epsilon BARRACKS-TYPE balance-type
		then
		constructor-max-rate constructor-rate!
	else
		0 constructor-rate!
	then
forever

#type Archer
#color FFF
#decoration 00F square
#hardware
processor 10
engine 0.03
solar-cells 0.05
energy 50 15
syphon 0.5 15
armor 200
grenades 25 15 15
robot-sensor 15 1

#code
#vector center
#vector barracks

CENTER-POSITION-CHANNEL wait-for-message center!
BARRACKS-POSITION-CHANNEL wait-for-message barracks!

do
	; update
	CENTER-POSITION-CHANNEL receive if center! then
	BARRACKS-POSITION-CHANNEL receive if barracks! then
	; get to the wall
	friendly-collision if
		position center v- engine-velocity!
		engine-max-power engine-power!
	else
		0 engine-power!
	then
	; keep guard
	44 periodic-robot-sensor drop
	robot-found if
		robot-position robot-velocity lead-grenade
	then
	; resupply
	energy max-energy / 0.3 < if
		barracks position v- rect-to-polar syphon-direction! syphon-distance!
		syphon-max-rate syphon-rate!
	else
		0 syphon-rate!
	then
forever

#type Lord
#decoration FF0 cross
#hardware
processor 10
solar-cells 0.025
energy 7 7
armor 10
robot-sensor 30 200

#code
1 robot-sensor-sees-friends!
0 robot-sensor-sees-enemies!
do
	; scan, calculate, and announce fortress centerpoint
	180 periodic-robot-sensor if
		cluster-center 2 CENTER-POSITION-CHANNEL send
	then
forever

#type Barracks
#decoration F00 backslash
#hardware
processor 2
energy 2000 1
solar-cells 0.1
armor 75

#code
#var help 0
0
do
	; announce position
	1 + dup > 50 if
		position 2 BARRACKS-POSITION-CHANNEL send
		drop
		0
	then
	; ask for emergency resupply if low
	energy 250 < if
		1 1 BARRACKS-HELP-CHANNEL send
		1 help!
	else
		help if
			0 1 BARRACKS-HELP-CHANNEL send
			0 help!
		then
	then
forever

#type Farmer Peasant
#decoration 0F0 hline
#hardware
processor 10
energy 1000 35
eater 3
syphon 3 10
armor 150
engine 0.05
food-sensor 10 1

#code
#vector center
#vector barracks
#vector granary

CENTER-POSITION-CHANNEL wait-for-message center!
BARRACKS-POSITION-CHANNEL wait-for-message barracks!
GRANARY-POSITION-CHANNEL wait-for-message granary!

do
	; update
	CENTER-POSITION-CHANNEL receive if center! then
	BARRACKS-POSITION-CHANNEL receive if barracks! then
	GRANARY-POSITION-CHANNEL receive if granary! then
	; do we need to unload?
	energy max-energy = if
		do
			GRANARY-POSITION-CHANNEL receive if granary! then
			granary seek-location
		position granary 10 in-range not while-loop
		0 engine-power!
		do
			GRANARY-POSITION-CHANNEL receive if granary! then
			granary position v- rect-to-polar syphon-direction! syphon-distance!
			syphon-max-rate negate syphon-rate!
		energy 35 > while-loop
		0 syphon-rate!
	else
		; check for food near fortress
		44 periodic-food-sensor drop
		food-found center food-position 15 in-range and if
			food-position seek-location
		else
			0 engine-power!
		then
	then
forever

#type Granary
#decoration 8F0 triangle
#hardware
processor 3
energy 2000 1
constructor 4
armor 75

#code
0
do
	; announce position
	1 + dup > 50 if
		position 2 GRANARY-POSITION-CHANNEL send
		drop
		0
	then
	; reproduce
	energy 5 >= if
		; new if done
		constructor-progress nif
			WORKER-TYPE constructor-type!
		then
		constructor-max-rate constructor-rate!
	else
		0 constructor-rate!
	then
forever

#end
